apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   compile group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'

task leader(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runServer -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
  else {
  args '8000'
  }
}

task runClient(type: JavaExec) {
  group 'client'
  description 'Creates client socket sends a message to the server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runClient -Phost=localhost -Pport=9099 -q --console=plain
  if (project.hasProperty("host") && project.hasProperty('port')) {
    args(project.getProperty('host'), project.getProperty('port'));
  }
  else {
  args 'localhost'
  args '8000'
  }
}

task runNode1(type: JavaExec) {
  group 'node'
  description 'Starts node which funds bank'
  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Node'
  standardInput = System.in

  args 'localhost'
  args '8000'
  args '8001'
  args '10000'
}

task runNode2(type: JavaExec) {
  group 'node'
  description 'Starts node which funds bank'
  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Node'
  standardInput = System.in

  args 'localhost'
  args '8000'
  args '8002'
  args '15000'
}

